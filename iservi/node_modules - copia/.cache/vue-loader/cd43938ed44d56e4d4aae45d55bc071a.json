{"remainingRequest":"C:\\Users\\Mario Arenas\\Desktop\\CursoMisionTIC 2022\\Ciclo 3\\ProyectoIservi\\Iservi\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Mario Arenas\\Desktop\\CursoMisionTIC 2022\\Ciclo 3\\ProyectoIservi\\Iservi\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Mario Arenas\\Desktop\\CursoMisionTIC 2022\\Ciclo 3\\ProyectoIservi\\Iservi\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Mario Arenas\\Desktop\\CursoMisionTIC 2022\\Ciclo 3\\ProyectoIservi\\Iservi\\src\\components\\Servicios.vue?vue&type=template&id=5c598bdd&class=darkgray&","dependencies":[{"path":"C:\\Users\\Mario Arenas\\Desktop\\CursoMisionTIC 2022\\Ciclo 3\\ProyectoIservi\\Iservi\\src\\components\\Servicios.vue","mtime":1633493635068},{"path":"C:\\Users\\Mario Arenas\\Desktop\\CursoMisionTIC 2022\\Ciclo 3\\ProyectoIservi\\Iservi\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1633403729540},{"path":"C:\\Users\\Mario Arenas\\Desktop\\CursoMisionTIC 2022\\Ciclo 3\\ProyectoIservi\\Iservi\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1633403732971},{"path":"C:\\Users\\Mario Arenas\\Desktop\\CursoMisionTIC 2022\\Ciclo 3\\ProyectoIservi\\Iservi\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1633403729540},{"path":"C:\\Users\\Mario Arenas\\Desktop\\CursoMisionTIC 2022\\Ciclo 3\\ProyectoIservi\\Iservi\\node_modules\\vue-loader\\lib\\index.js","mtime":1633403731965}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}